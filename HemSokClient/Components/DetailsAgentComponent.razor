@page "/detailsagent/{id}"
@inject HttpClient httpClient
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager


<PageTitle>DetailsAgent</PageTitle>

@if (Agent != null)
{
    <h3>@Agent.Nickname<img src="@Agent.ImagePath" alt="Profilbild" style="max-width: 7rem; border-radius: 10%; margin: 1rem;" /></h3>

    <table class="table ">
        <thead>
            <tr>
                <th>Förnamn</th>
                <th>Smeknamn</th>
                <th>Efternamn</th>
                <th>Mäklarfirma</th>
                <td></td>
                <td></td>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@Agent.FirstName</td>
                <td>@Agent.Nickname</td>
                <td>@Agent.LastName</td>
                <td>@Agent.Agency.Name</td>
                <td><button class="btn btn-primary" @onclick="() => GoToEditAgentPage(Agent.Id)">Redigera</button></td>
                <td><button class="btn btn-primary" @onclick="() => DeleteAgent(Agent.Id)">Ta bort</button></td>
            </tr>
        </tbody>
    </table>
}
else
{
    <p>Mäklaren kunde inte hittas.</p>
}
<button @onclick="GoBack" class="btn btn-primary" style="margin-top: 1rem">Tillbaka</button>
@code {
    [Parameter]
    public string? Id { get; set; }

    private Agent? Agent = new();

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(Id))
        {
            var response = await httpClient.GetAsync($"api/agent/{Id}");
            if (response.IsSuccessStatusCode)
            {
                Agent = await response.Content.ReadFromJsonAsync<Agent>();
            }
        }
    }
    public async Task DeleteAgent(string id)
    {
        bool isConfirmed = await JSRuntime.InvokeAsync<bool>("confirm", "Är du säker på att du vill ta bort mäklaren?");
        if (isConfirmed)
        {
            var response = await httpClient.DeleteAsync($"api/agent/{id}");
            if (response.IsSuccessStatusCode)
            {
                await JSRuntime.InvokeVoidAsync("alert", "Mäklaren har tagits bort.");
                NavigationManager.NavigateTo("/agent");
            }
            else
            {
                await JSRuntime.InvokeVoidAsync("alert", $"Ett fel uppstod: {response.StatusCode}");
            }
        }
    }
    private void GoToEditAgentPage(string id)
    {
        NavigationManager.NavigateTo($"/editagent/{id}");
    }
    private void GoBack()
    {
        NavigationManager.NavigateTo("/agent");
    }
}

