@inject IAPIService apiService
@typeparam TEntity

<input class="form-control" placeholder="Sök bostad.."
 @bind="searchModel.StreetSearch"/>
<br />
    @if (apiService.Municipality!=null)
    {
<label>Välj Kommun: </label>
<InputSelect @bind-Value="searchModel.MunSearch">
        <option value="">Sök på kommun...</option>
        @foreach (var c in apiService.Municipality.OrderBy(s => s.Name))
    {
        <option value="@c.Id">@c.Name</option>
    }
</InputSelect>}
<br />
<br />
  @if (apiService.Counties!=null)
    {
<label>Välj Län: </label>
<InputSelect @bind-Value="searchModel.CountySearch">
        @if (chosenCounty != "")
        {
            <option value=@chosenCounty>@chosenCounty</option>
        }
        else
        {
            <option value="">Sök på län...</option>
        }
        @foreach (var c in apiService.Counties.OrderBy(s => s.Name))
    {
        <option value="@c.Id">@c.Name</option>
    }
</InputSelect>}
<br />
<br />
<button class="form-control" @onclick="OnSearchClicked">
    Sök
 </button>

@code {

    [Parameter]
    public List<TEntity> Items { get; set; }

    [Parameter]
    public EventCallback<SearchModel> OnSearch { get; set; }


    public SearchModel searchModel = new();

    public string chosenCounty { get; set; } = string.Empty;

    private async Task OnSearchClicked()
    {
        await OnSearch.InvokeAsync(searchModel);

    }

    protected async override Task OnInitializedAsync()
    {
        apiService.Counties = await apiService.GetAllFromApiAsync<County>();
        apiService.Municipality = await apiService.GetAllFromApiAsync<Municipality>();


    }

    protected void OnChangeMunicipality()
    {
        // sätt rätt län i dropdown (sedan disable).
        chosenCounty = apiService.Municipality.FirstOrDefault(s => s.Id == int.Parse(searchModel.MunSearch)).County.Name;
    }
}
