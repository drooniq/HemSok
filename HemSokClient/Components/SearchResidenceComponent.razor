@inject IAPIService apiService
@typeparam TEntity
@* Author: Marcus Karlsson *@
<input class="form-control" placeholder="Sök bostad med address.."
 @bind="searchModel.StreetSearch"/>
<br />
    @if (apiService.Municipality!=null)
    {
<label>Välj Kommun: </label>
<InputSelect ValueChanged="@((string value)=>ChooseMun(value))" ValueExpression="@(()=>searchModel.MunSearch)" Value="searchModel.MunSearch">
        @if(searchModel.CountySearch != "")
        {
            <option value="">Sök på kommun...</option>
            @foreach (var c in apiService.Municipality.Where(s => s.County.Id == int.Parse(searchModel.CountySearch))
                                                      .OrderBy(s => s.Name))
            {
                <option value="@c.Id">@c.Name</option>
            }                 
        }
        else
        {
            <option value="">Sök på kommun...</option>
            @foreach (var c in apiService.Municipality.OrderBy(s => s.Name))
            {
                <option value="@c.Id">@c.Name</option>
            }
        }                
    </InputSelect>}
<br />
<br />
@if (apiService.Counties != null)
    {
<label>Välj Län: </label>
    <InputSelect ValueChanged="@((string value)=>ChooseCounty(value))" ValueExpression="@(()=>searchModel.CountySearch)" Value="searchModel.CountySearch">
        @if (searchModel.MunSearch != "")
        {
            var mun = apiService.Municipality.FirstOrDefault(s => s.Id == int.Parse(searchModel.MunSearch));
            <option value=@apiService.Counties.FirstOrDefault(s =>s.Id == mun.County.Id)>
                @apiService.Counties.FirstOrDefault(s => s.Id == mun.County.Id).Name
            </option>
        }
        else
        {
            @if (searchModel.CountySearch != "")
            {
                <option value="@searchModel.CountySearch">
                    @apiService.Counties.First(s => s.Id == int.Parse(searchModel.CountySearch)).Name
                </option>
                <option value="">Nollställ filter</option>
            }
            else
            {
                <option value="">Sök på län...</option>
                @foreach (var c in apiService.Counties.OrderBy(s => s.Name))
                {
                    <option value="@c.Id">@c.Name</option>
                }
            }
        }                
    </InputSelect>
@* <InputSelect @bind-Value="searchModel.CountySearch">
        @if (searchModel.MunSearch != "")
        {
            var mun = apiService.Municipality.FirstOrDefault(s => s.Id == int.Parse(searchModel.MunSearch));
            <option value=@apiService.Counties.FirstOrDefault(s =>s.Id == mun.County.Id)>
                @apiService.Counties.FirstOrDefault(s => s.Id == mun.County.Id).Name
            </option>
        }
        else
        {
            <option value="">Sök på län...</option>
            @foreach (var c in apiService.Counties.OrderBy(s => s.Name))
            {
                <option value="@c.Id">@c.Name</option>
            }
        }
    
</InputSelect> *@}
<br />
<br />
<button class="form-control" @onclick="OnSearchClicked">
    Sök
 </button>


@code {

    [Parameter]
    public List<TEntity> Items { get; set; }

    [Parameter]
    public EventCallback<SearchModel> OnSearch { get; set; }
    public SearchModel searchModel = new();

    private async Task OnSearchClicked()
    {
        await OnSearch.InvokeAsync(searchModel);

    }
    private void ChooseMun(string munId)
    {       
        searchModel.MunSearch = munId;
    }
    private void ChooseCounty(string countyId)
    {
        searchModel.CountySearch = countyId;
    }

    protected async override Task OnInitializedAsync()
    {
        apiService.Counties = await apiService.GetAllFromApiAsync<County>();
        apiService.Municipality = await apiService.GetAllFromApiAsync<Municipality>();


    }

}
