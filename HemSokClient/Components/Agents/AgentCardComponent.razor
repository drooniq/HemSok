@inject NavigationManager NavigationManager
@inject IAuthStateService AuthStateService
@inject INavigationStateService NavigationStateService

@* Author: Fredrik Blixt, Emil Waara *@
@if (Agent != null)
{
    <div class="agentcard" onclick="@GoDetails" style="width: 20rem; height: 25rem">

        <div class="agent-header">
            <img src="@Agent?.ImagePath" alt="Profilbild" />
        </div>

        <div class="agent-body card-light-transparent">
            <h5>@Agent?.FirstName @Agent?.LastName</h5>
            <p>"@Agent?.Nickname"</p>
            <small class="">@Residences?.Count(r => r.Agent.Id == Agent?.Id) objekt till salu</small>
        </div>

        <div class="agent-footer card-dark-transparent">
            <div class="agent-footer-left">
                @Agent?.Agency?.Name
            </div>

            <div class="agent-footer-right">
                <img src="@Agent?.Agency?.ImagePath" alt="Logotyp" class="card-footer-image" />

@*                 @if (ShowCrud)
                {
                    @if (AuthStateService.IsSuperAdmin() || (AuthStateService.IsAdmin() && AuthStateService.currentUser?.AgencyId == agency?.Id))
                    {
                        <a class="btn btn-primary" @onclick="@(e => NavigateToPage("/editagency/" + agency.Id))"><i class="fa-solid fa-pen-to-square"></i></a>
                    }

                    <a class="btn btn-secondary" @onclick="@(e => NavigateToPage("/agencydetails/" + agency.Id))"><i class="fa-solid fa-circle-info"></i></a>

                    @if (AuthStateService.IsSuperAdmin())
                    {
                        <a class="btn btn-danger" @onclick="@(e => NavigateToPage("/deleteagency/" + agency.Id))"><i class="fa-solid fa-trash-can"></i></a>
                    }
                } *@
            </div>
        </div>
    </div>
}
else
{
    <ErrorMessage Message="Mäklarna kommer vid midnatt"/>
}

@code {
    [Parameter]
    public Agent? Agent { get; set; }
    [Parameter]
    public List<Residence>? Residences { get; set; } = new List<Residence>();


    public void GoDetails()
    {
        NavigationStateService.NavigateTo("/detailsagent/" + Agent?.Id);
    }
}

<style>
    .agentcard {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        overflow:hidden;
        margin: 0px;
        padding: 0px;
        margin: 15px;
        box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.8);
        border: 1px solid black;
        transition: 0.3s ease;
        border-radius: 15px;
        font-family: Arial, Helvetica, sans-serif;
        background-color: rgba(0,0,0,0);
        cursor: pointer;
    }

    .agentcard:hover {
        transform: translateY(-15px);
        box-shadow: 0 16px 32px 0 rgba(0, 0, 0, 0.6);
    }

    .agent-header {
        display: flex;
        justify-items: center;
        align-items: center;
        height: 10rem;
        margin: 0px;
        padding: 0px;
    }

    .agent-header img {
/*         max-height: 8rem;
        max-width: 8rem;
 */        
        height: 8rem;
        width: 8rem;
        border-radius: 50%;
    }

    .agent-footer {
        display: flex;
        align-items: center;
        height: 3rem;
        width: 100%;
        padding: 0.5rem;
    }

    .agent-footer img {
        max-height: 5rem;
        max-width: 3rem;
    }

    .agent-footer-left {
    }

    .agent-footer-right {
        display: flex;
        flex: 1;
        justify-content: right;
    }

    .agent-body {
        display: flex;
        flex: 1;
        flex-direction: column;
        justify-content: center;
        text-align: center;
        width: 100%;
    }
</style>