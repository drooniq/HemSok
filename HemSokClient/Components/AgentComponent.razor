@page "/agent"
@using System.ComponentModel.DataAnnotations
@using System.Threading.Tasks
@inject HttpClient httpClient
@inject NavigationManager NavigationManager

<PageTitle>Agents</PageTitle>
<h3>Mäklare(spöken)</h3>

@* <button class="btn btn-primary" @onclick="FetchAgentsAsync">Visa mäklare</button> *@
<button class="btn btn-primary" @onclick="GoToCreateAgentPage">Lägg till ny mäklare</button>

@if (Agents != null)
{
    <table class="table table-hover">
        <thead>
            <tr>
                <th>Profilbild</th>
                <th>Smeknamn</th>
                <th>Förnamn</th>
                <th>Efternamn</th>
                <th>Mäklarfirma</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var agent in Agents)
            {
                <tr class="row-hover" @onclick="() => GoToDetailsAgentPage(agent.Id)">
                    <td><img src="@agent.ImagePath" alt="Profilbild" style="max-width: 6rem; border-radius: 10%;" /></td>
                    <td>@agent.Nickname</td>
                    <td>@agent.FirstName</td>
                    <td>@agent.LastName</td>
                    <td>@agent.Agency.Name</td>
                </tr>
            }
        </tbody>
    </table>

}
else
{
    <p>Mäklarna kommer vid midnatt</p>
}

@code {
    private List<Agent>? Agents;
    private Agent? Agent;

    // public async Task FetchAgentsAsync()
    // {
    //     var response = await httpClient.GetAsync("api/agent");
    //     if (response.IsSuccessStatusCode)
    //     {
    //         agents = await response.Content.ReadFromJsonAsync<List<Agent>>();
    //     }
    //     else
    //     {
    //         agents = null;
    //     }
    // }
    private void GoToDetailsAgentPage(string id)
    {
        NavigationManager.NavigateTo($"/detailsagent/{id}");
    }

    private void GoToCreateAgentPage()
    {
        NavigationManager.NavigateTo("/createagent");
    }
    protected override async Task OnInitializedAsync()
    {
        var response = await httpClient.GetAsync("api/agent");
        if (response.IsSuccessStatusCode)
        {
            Agents = await response.Content.ReadFromJsonAsync<List<Agent>>();
        }
        else
        {
            Agents = null;
        }
    }
}
