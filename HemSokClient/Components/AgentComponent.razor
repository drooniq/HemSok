@page "/agent"
@using System.ComponentModel.DataAnnotations
@using System.Threading.Tasks
@inject HttpClient httpClient
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject IAPIService apiService

@* Author: Fredrik Blixt*@

<PageTitle>Agents</PageTitle>
<h3>Mäklare(spöken)</h3>

@* <button class="btn btn-primary" @onclick="FetchAgentsAsync">Visa mäklare</button> *@
<button class="btn btn-primary btn-sm" @onclick="@(() =>NavigationManager.NavigateTo("/register"))">Skapa ny mäklare</button>

@if (agents != null)
{
    <div class="container">
        @foreach (var agent in agents)
        {
                <AgentCardComponent Agent="@agent" Residences="residences"></AgentCardComponent >
        }
    </div>
}
else
{
    <p>Mäklarna kommer vid midnatt</p>
}

@code {
    private List<Agent>? agents;
    private List<Residence>? residences;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            agents = await apiService.GetAllFromApiAsync<Agent>();
            residences = await apiService.GetAllFromApiAsync<Residence>();
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Ett undantag inträffade: {ex.Message}");
        }
    }
}