@inject NavigationManager navigationManager
@inject IAPIService apiService
@page "/deleteresidence/{id}"

@* Author: Marcus Karlsson*@

<h3>Ta bort bostad!</h3>

Är du säker på att du vill ta bort denna bostad?
@if (residence != null)
{
    <EditForm Model="@residence">
        <button class="btn btn-danger" @onclick="DeleteResidence">Ta bort</button>
    </EditForm>
   
}
else
{
    <p>Bostaden kunde inte hittas.</p>
}

@code {

    [Parameter]
    public string? Id { get; set; }

    private Residence? residence;

    private async Task DeleteResidence()
    {     
        // var post = await httpClient.DeleteAsync($"api/Residence/{residence.Id}");
        if (await apiService.DeleteFromApiAsync<Residence>("api/Residence/" + residence.Id, residence))
         {
             navigationManager.NavigateTo("/residence");
         }
        // else
        // {

        // }
    }

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(Id))
        {
            residence = await apiService.GetFromApiAsync<Residence>("api/residence/" + Id);
        }
    }
}
