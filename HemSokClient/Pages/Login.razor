@* @page "/login"
@using System.Net.Http
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Components.Forms

<h3>Login</h3>

<EditForm Model="@loginModel" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="username">Username:</label>
        <InputText id="username" @bind-Value="loginModel.Username" class="form-control" />
        <ValidationMessage For="@(() => loginModel.Username)" />
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <InputText id="password" @bind-Value="loginModel.Password" class="form-control" type="password" />
        <ValidationMessage For="@(() => loginModel.Password)" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@code {
    private LoginModel loginModel = new LoginModel();

    private async Task HandleSubmit()
    {
        try
        {
            // Assuming you have a service to handle authentication
            var token = await authService.Authenticate(loginModel);

            // Store token in local storage or session storage
            await localStorage.SetItemAsync("authToken", token);

            // Redirect to home page or another authorized page
            NavigationManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            // Handle authentication errors
            // Display error message or perform other actions
            Console.WriteLine($"Authentication error: {ex.Message}");
        }
    }
}
Then, create a corresponding model class for the login credentials (LoginModel.cs):

csharp
Copy code
// LoginModel.cs

using System.ComponentModel.DataAnnotations;

public class LoginModel
{
    [Required(ErrorMessage = "Username is required")]
    public string Username { get; set; }

    [Required(ErrorMessage = "Password is required")]
    public string Password { get; set; }
}
 *@
