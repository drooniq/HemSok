@page "/agencylisting"
@using System.Net.Http
@using System.Net.Http.Json
@using System.Text.Json
@inject IAPIService apiService
@inject IAuthStateService AuthStateService
@inject INavigationStateService NavigationStateService

@* Author: Emil Waara*@
 <style>
    .agencyLogo {
        max-width: 6rem;
        border-radius: 10%;
        max-width: 4rem;
    }

    .agenciesContainer {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        width: 80%;
    }

    .agencyButton {
        padding: 15px;
    }

    .agencyMainContainer {
        display:flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        margin-top: 15px;
    }
</style>


@if (apiService.Agencies != null)
{
    <div class="agencyMainContainer">

        @if (AuthStateService.IsSuperAdmin())
        {
            <button class="btn btn-primary agencyButton" @onclick="GoToCreateAgencyPage">Skapa ny mäklarfirma</button>
        }

        <div class="agenciesContainer">
            @foreach(var agency in apiService.Agencies)
            {
                <AgencyCard AgencyId="@agency.Id"/>
            }
        </div>
    </div>
}
else
{
    <ErrorMessage Message="Tyvärr, det verkar inte finnas några mäklarbyråer att visa" />
}


@code {
    private void Navigate(string uri)
    {
        NavigationStateService.NavigateTo(uri);
    }

    protected override async Task OnInitializedAsync()
    {
        apiService.Agencies = await apiService.GetAllFromApiAsync<Agency>();
    }

    private void GoToDetailsAgencyPage(int id)
    {       
        NavigationStateService.NavigateTo($"/agencydetails/{id.ToString()}");
    }

    private void GoToCreateAgencyPage()
    {
        NavigationStateService.NavigateTo("/addagency");
    }


}

