@page "/editagency/{id:int}"
@inject IAPIService apiService
@inject INavigationStateService NavigationStateService
@using HemSokClient.Models;

@* Author: Emil Waara*@
<style>
    .card:hover {
        transform: translateY(0);
    }

    .card {
        display: flex;
        flex-direction: column;
    }

    .card-header {
        display: flex;
        width: 100%;
        header: 5rem;
        justify-content: center;
        align-items: center;
        font-size: xx-large;
    }
    .card-body {
        flex-direction: row;
        justify-content: center;
        align-items: center;
        padding: 15px;
        width: 100%;
    }

    .card-body-left {
        display: flex;
        flex-direction: column;
        margin: 0px;
        padding: 0px;
        width: 50%;
    }

    .card-body-left label {
        justify-items: left;
    }

    .card-body-right {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 50%;
        height: 100%;
    }

    .card-body-right img {
        width: 70%;
        height: 70%;
    }

    .card-body-left form-control {
        width: 100%;
    }

    .card-body-left button, .card-body-left a {
        margin-top: 10px;
        margin-right: 10px;
    }
</style>

@if (agency != null)
{
    <div class="card" style="width: 70rem; height: 40rem">
        <div class="card-header card-dark" style="height: 5rem;">
            <span>@agency.Name</span>
        </div>

        <div class="card-body card-dark-transparent">
            <div class="card-body-left">
                <EditForm Model="@agency" OnValidSubmit="@HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                        <label for="name">Name:</label>
                        <InputText id="name" class="form-control" @bind-Value="@agency.Name" @oninput="HandleChange" />
                        <ValidationMessage For="@(() => agency.Name)" />

                        <label for="description">Description:</label>
                        <textarea id="description" class="form-control" @bind="agency.Description" @oninput="HandleChange"></textarea>
                        <ValidationMessage For="@(() => agency.Description)" />

                        <label for="address">Address:</label>
                        <InputText id="address" class="form-control small" @bind-Value="@agency.Address" @oninput="HandleChange" />
                        <ValidationMessage For="@(() => agency.Address)" />

                        <label for="phoneNumber">Phone Number:</label>
                        <InputText id="phoneNumber" class="form-control small" @bind-Value="@agency.PhoneNumber" @oninput="HandleChange" />
                        <ValidationMessage For="@(() => agency.PhoneNumber)" />

                        <label for="email">Email:</label>
                        <InputText id="email" class="form-control small" @bind-Value="@agency.Email" @oninput="HandleChange" />
                        <ValidationMessage For="@(() => agency.Email)" />

                        <label for="website">Website:</label>
                        <InputText id="website" class="form-control small" @bind-Value="@agency.Website" @oninput="HandleChange" />
                        <ValidationMessage For="@(() => agency.Website)" />

                        <label for="imagePath">Image Path:</label>
                        <InputText id="imagePath" class="form-control small" @bind-Value="@agency.ImagePath" @oninput="HandleChange" />
                        <ValidationMessage For="@(() => agency.ImagePath)" />
                    @if (formIsChanged)
                    {
                        <button type="submit" class="btn btn-success">Spara</button>
                    }
                    else
                    {
                        <button type="submit" class="btn btn-secondary">Spara</button>
                    }
                    <a class="btn btn-primary" @onclick="@(() => NavigateBack())">Avbryt</a>
                </EditForm>
            </div>
            <div class="card-body-right">
                <img src="@agency.ImagePath" alt="..." />
            </div>
        </div>
    </div>
}
else
{
    <ErrorMessage Message="Tyvärr, det verkar inte finnas någon mäklarbyrå att visa" />
}

@code
{
    [Parameter]
    public int Id { get; set; }

    private bool formIsChanged = false;

    private Agency agency { get; set; }

    private void NavigateBack()
    {
        NavigationStateService.NavigateBack();
    }

    private void HandleChange()
    {
        formIsChanged = true;
    }

    protected override async Task OnInitializedAsync()
    {
        agency = await apiService.GetFromApiAsync<Agency>("api/agency/" + Id);
    }

    private async Task HandleValidSubmit()
    {
        if (formIsChanged)
        {
            if (await apiService.PutToApiAsync<Agency>(agency))
            {
                NavigationStateService.NavigateBack();
            }
            else
            {
                Console.WriteLine("Something went wrong when updating agency");
            }
        }
    }
}


