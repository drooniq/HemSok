@page "/agencydetails/{id:int}"
@inject IAPIService apiService
@inject INavigationStateService NavigationStateService
@inject IAuthStateService AuthStateService

@* Author: Emil Waara*@
<style>
    .card-body {
        padding: 0.5rem;
    }

    .card-footer {
        padding: 0.5rem;
        display: flex;
        justify-content: right;
        align-items: right;
        background-color: rgb(27, 29, 42);
        border-bottom-left-radius: 15px;
        border-bottom-right-radius: 15px;
    }

        .card-footer a {
            margin-left: 5px;
        }

    .card-title {
        padding: 0px;
        margin: 0px;
        display: flex;
    }

    .card-title-left, .card-title-left h5 {
        display: flex;
        justify-content: center;
        align-items: center;
        flex: 1;
        font-size: x-large;
        font-weight: 800;
        padding: 5px;
        height: 4rem;
    }

    .card-title-right {
        height: 4 rem;
        display: flex;
        align-items: center;
    }

        .card-title-right img {
            border-radius: 3px;
        }

    .card-image-top {
        max-height: 3rem;
    }

    .card-text {
        margin-top: 1rem;
    }

        .card-text h3, h4, h5 {
            margin: 0px;
            padding: 0px;
        }

        .card-text p {
            margin-top: 0.5rem;
        }

        .card-text a {
            color: darkblue;
            text-decoration: none;
        }

            .card-text a:hover {
                color: lightblue;
            }
</style>

@if (agency != null)
{
    <div class="card card-dark-transparent" style="width: 40rem; height: 20rem;">
        <div class="card-body">
            <div class="card-title">
                <div class="card-title-left">
                    <h5>
                        @agency.Name
                    </h5>
                </div>
                <div class="card-title-right">
                    <img src="@agency.ImagePath" alt="..." class="card-image-top" />
                </div>
            </div>
            <div class="card-text">
                <h3 style="text-align: center; font-weight: 900; margin: 0; padding: 0; margin-bottom: 0.5rem;">
                    @agency.PhoneNumber
                </h3>
                <h5 style="text-align: center;">
                    <a><i class="fa-solid fa-globe"></i> @agency.Website</a>
                </h5>
                <h5 style="text-align: center;">
                    <a style="text-decoration: none;" href="mailto: @agency.Email"><i class="fa-regular fa-envelope"></i>  @agency.Email</a>
                </h5>
                <p>
                    @agency.Description
                </p>
            </div>
        </div>
        <div class="card-footer">
            @if (AuthStateService.IsSuperAdmin() || AuthStateService.IsAdmin())
            {
                <a class="btn btn-primary" @onclick="@(e => NavigateToPage("/agencyedit/" + agency.Id))"><i class="fa-solid fa-pen-to-square"></i></a>
            }

            <a class="btn btn-secondary" @onclick="@(e => NavigateToPage("/agencydetails/" + agency.Id))"><i class="fa-solid fa-circle-info"></i></a>

            @if (AuthStateService.IsSuperAdmin())
            {
                <a class="btn btn-danger" @onclick="@(e => NavigateToPage("/agencydelete/" + agency.Id))"><i class="fa-solid fa-trash-can"></i></a>
            }
        </div>
    </div>
@*     <div class="agentsDisplay" style="display: flex; flex-direction: row;">
        @if (agents.Count > 0)
        {
            @foreach (var agent in agents)
            {
                if (agent.Agency.Id == agency.Id)
                {
                    <AgentCardComponent Agent="@agent" />
                }
            }
        }
    </div>
 *@}
else
{
    <ErrorMessage Message="Tyvärr, det verkar inte finnas någon mäklarbyrå med det IDt" />
}

<button class="btn btn-primary" @onclick="ReturnToAgencyListing">Gå Tillbaka</button>

@code {
    [Parameter]
    public int Id { get; set; }

    private Agency agency { get; set; }
    private List<Agent>? agents = new List<Agent>();

    protected override async Task OnInitializedAsync()
    {
        agency = await apiService.GetFromApiAsync<Agency>("api/agency/" + Id);
        agents = (await apiService.GetAllFromApiAsync<Agent>()).Where(a=>a.Agency.Id == agency.Id).ToList();
    }

    private void NavigateToPage(string uri)
    {
        NavigationStateService.NavigateTo(uri);
    }

    private void ReturnToAgencyListing()
    {
        if (!NavigationStateService.NavigateBack())
        {
            NavigationStateService.NavigateTo("/agencylisting");   
        }
    }
}

