@page "/agencydetails/{id:int}"
@inject IAPIService apiService
@inject INavigationStateService NavigationStateService
@inject IAuthStateService AuthStateService

@* Author: Emil Waara*@
<style>
    .card:hover {
        transform: translateY(0);
    }

    .card-header {
        display: flex;
        align-items: center;
        height: 4rem;
    }

    .card-header-left {
        flex: 1;
        padding-left: 10px;
        font-size: larger;
    }

    .card-header-right img {
        height: 3rem;
        border-radius: 5px;
        margin-right: 15px;
    }

    .card-footer {
        align-items: center;
        padding: 0.5rem;
        background-color: rgb(27, 29, 42);
    }

    .card-footer-left {
    }

    .card-footer-right {
        display: flex;
        flex: 1;
        justify-content: right;
    }

    .card-footer a {
        margin-left: 5px;
    }

    .card-footer-left, .card-footer-left a {
        text-decoration: none;
        color: white;
    }

    .card-body {
        flex-direction: column;
        justify-content: center;
        align-items: center;
        text-align: center;
    }

    .card-body-top {
        height: 2.5rem;
        margin: 0px;
        padding: 0px;
    }

    .card-body-bottom {
        flex: 1;
    }
</style>

@if (agency != null)
{
    <div class="card card-dark-transparent" style="width: 40rem; height: 30rem">
        <div class="card-header card-dark">
            <div class="card-header-left">
                @agency.Name
            </div>
            <div class="card-header-right">
                <img src="@agency.ImagePath" alt="..." class="card-image-top" />
            </div>
        </div>
        <div class="card-body card-dark-transparent">
            <h3 style="text-align: center; font-weight: 900; margin: 0; padding: 0; margin-bottom: 0.5rem;">
                @agency.PhoneNumber
            </h3><br />
            <h5 style="text-align: center;">
                <a><i class="fa-solid fa-globe"></i> @agency.Website</a>
            </h5>
            <h5 style="text-align: center;">
                <a style="text-decoration: none;" href="mailto: @agency.Email"><i class="fa-regular fa-envelope"></i>  @agency.Email</a>
            </h5>
            <p>
                @agency.Description
            </p>
        </div>
        <div class="card-footer card-dark">
            <div class="card-footer-left">
                <a href="@agency.Website"><i class="fa-solid fa-globe"></i></a>
                <a href="mailto: @agency.Email"><i class="fa-regular fa-envelope"></i></a>
            </div>

            <div class="card-footer-right">
                    @if (AuthStateService.IsSuperAdmin() || (AuthStateService.IsAdmin() && AuthStateService.currentUser?.AgencyId == agency?.Id))
                    {
                        <a class="btn btn-primary" @onclick="@(e => NavigateToPage("/editagency/" + agency.Id))"><i class="fa-solid fa-pen-to-square"></i></a>
                        <a class="btn btn-success" @onclick="@(e => NavigateToPage("/register/" + agency.Id))"><i class="fa-solid fa-user-plus"></i></a>
                    }

                    <a class="btn btn-secondary" @onclick="@(e => NavigateToPage("/agencydetails/" + agency.Id))"><i class="fa-solid fa-circle-info"></i></a>

                    @if (AuthStateService.IsSuperAdmin())
                    {
                        <a class="btn btn-danger" @onclick="@(e => NavigateToPage("/deleteagency/" + agency.Id))"><i class="fa-solid fa-trash-can"></i></a>
                    }
            </div>
        </div>
    </div>
    <div class="agentsDisplay" style="display: flex; flex-direction: row;">
        @if (agents.Count > 0)
        {
            @foreach (var agent in agents)
            {
                if (agent.Agency.Id == agency.Id)
                {
@*                     <AgentCardComponent Agent="@agent" /> *@
                }
            }
        }
    </div>
}
else
{
    <ErrorMessage Message="Tyvärr, det verkar inte finnas någon mäklarbyrå med det IDt" />
}

<button class="btn btn-primary" @onclick="ReturnToAgencyListing">Gå Tillbaka</button>

@code {
    [Parameter]
    public int Id { get; set; }

    private Agency agency { get; set; }
    private List<Agent>? agents = new List<Agent>();

    protected override async Task OnInitializedAsync()
    {
        agency = await apiService.GetFromApiAsync<Agency>("api/agency/" + Id);
        //agents = (await apiService.GetAllFromApiAsync<Agent>()).Where(a=>a.Agency.Id == agency.Id).ToList();
    }

    private void NavigateToPage(string uri)
    {
        NavigationStateService.NavigateTo(uri);
    }

    private void ReturnToAgencyListing()
    {
        if (!NavigationStateService.NavigateBack())
        {
            NavigationStateService.NavigateTo("/agencylisting");   
        }
    }
}

