@* @page "/register"
@using System.Net.Http
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Components.Forms

<h3>Register</h3>

<EditForm Model="@registerModel" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="username">Username:</label>
        <InputText id="username" @bind-Value="registerModel.Username" class="form-control" />
        <ValidationMessage For="@(() => registerModel.Username)" />
    </div>

    <div class="form-group">
        <label for="email">Email:</label>
        <InputText id="email" @bind-Value="registerModel.Email" class="form-control" />
        <ValidationMessage For="@(() => registerModel.Email)" />
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <InputText id="password" @bind-Value="registerModel.Password" class="form-control" type="password" />
        <ValidationMessage For="@(() => registerModel.Password)" />
    </div>

    <div class="form-group">
        <label for="confirmPassword">Confirm Password:</label>
        <InputText id="confirmPassword" @bind-Value="registerModel.ConfirmPassword" class="form-control" type="password" />
        <ValidationMessage For="@(() => registerModel.ConfirmPassword)" />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@code {
    private RegisterModel registerModel = new RegisterModel();

    private async Task HandleSubmit()
    {
        try
        {
            // Assuming you have a service to handle registration
            await authService.Register(registerModel);

            // Redirect to login page or another authorized page
            NavigationManager.NavigateTo("/login");
        }
        catch (Exception ex)
        {
            // Handle registration errors
            // Display error message or perform other actions
            Console.WriteLine($"Registration error: {ex.Message}");
        }
    }
}
Then, create a corresponding model class for the registration data (RegisterModel.cs):

csharp
Copy code
// RegisterModel.cs

using System.ComponentModel.DataAnnotations;

public class RegisterModel
{
    [Required(ErrorMessage = "Username is required")]
    public string Username { get; set; }

    [Required(ErrorMessage = "Email is required")]
    [EmailAddress(ErrorMessage = "Invalid email address")]
    public string Email { get; set; }

    [Required(ErrorMessage = "Password is required")]
    [MinLength(6, ErrorMessage = "Password must be at least 6 characters long")]
    public string Password { get; set; }

    [Required(ErrorMessage = "Confirm password is required")]
    [Compare(nameof(Password), ErrorMessage = "Passwords do not match")]
    public string ConfirmPassword { get; set; }
}
 *@