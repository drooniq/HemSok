@page "/filterresidences"
@using HemSokClient.Data
@inject IAPIService apiService
@inject INavigationStateService NavigationStateService

@* Author: Marcus Karlsson, Emil Waara *@
<PageTitle>Filter Residences</PageTitle>

<input style="width: 30%; display:inline" class="form-control" placeholder="Sök bostad med address.." @bind="searchModel.StreetSearch" />

@if (apiService.Municipality != null)
{
    <label>Kommun: </label>
    <InputSelect ValueChanged="@((string value)=>ChooseMun(value))" ValueExpression="@(()=>searchModel.MunSearch)" Value="searchModel.MunSearch">
        @if (searchModel.CountySearch != "")
        {
            <option value="">Sök på kommun...</option>
            @foreach (var c in apiService.Municipality.Where(s => s.County.Id == int.Parse(searchModel.CountySearch))
            .OrderBy(s => s.Name))
            {
                <option value="@c.Id">@c.Name</option>
            }
        }
        else
        {
            <option value="">Sök på kommun...</option>
            @foreach (var c in apiService.Municipality.OrderBy(s => s.Name))
            {
                <option value="@c.Id">@c.Name</option>
            }
        }
    </InputSelect>
}

@if (apiService.Counties != null)
{
    <label>Län: </label>
    <InputSelect ValueChanged="@((string value)=>ChooseCounty(value))" ValueExpression="@(()=>searchModel.CountySearch)" Value="searchModel.CountySearch">
        @if (searchModel.MunSearch != "")
        {
            var mun = apiService.Municipality.FirstOrDefault(s => s.Id == int.Parse(searchModel.MunSearch));
            <option value=@apiService.Counties.FirstOrDefault(s =>s.Id == mun.County.Id)>
                @apiService.Counties.FirstOrDefault(s => s.Id == mun.County.Id).Name
            </option>
        }
        else
        {
            @if (searchModel.CountySearch != "")
            {
                <option value="@searchModel.CountySearch">
                    @apiService.Counties.First(s => s.Id == int.Parse(searchModel.CountySearch)).Name
                </option>
                <option value="">Nollställ filter</option>
            }
            else
            {
                <option value="">Sök på län...</option>
                @foreach (var c in apiService.Counties.OrderBy(s => s.Name))
                {
                    <option value="@c.Id">@c.Name</option>
                }
            }
        }
    </InputSelect>
}
<button type="button" class="btn btn-primary" @onclick="OnSearchClicked">
    Sök
</button>
<br />
<br />
<br />
@if(filteredResidences.Any() == true)
{
    <div style="display: flex; flex-wrap: wrap; justify-content: center;">
        @foreach (var residence in filteredResidences)
        {
            <div style="margin: 0 1rem;" @onclick="@(() => NavigationStateService.NavigateTo($"/residencedetails/{residence.Id}"))">
                <ResidenceCardComponent residence="residence"></ResidenceCardComponent>
            </div>
        }
    </div>
}

@code {
    private List<Residence>? filteredResidences = new List<Residence>();

    public List<Residence> initResidences { get; set; }
    private SearchModel searchModel { get; set; } = new SearchModel();
    private string stringOutput { get; set; } = "";

    private void ChooseMun(string munId)
    {
        searchModel.MunSearch = munId;
    }

    private void ChooseCounty(string countyId)
    {
        searchModel.CountySearch = countyId;
    }

    protected async override Task OnInitializedAsync()
    {
        apiService.Residences = await apiService.GetAllFromApiAsync<Residence>();
        apiService.Counties = await apiService.GetAllFromApiAsync<County>();
        apiService.Municipality = await apiService.GetAllFromApiAsync<Municipality>();
        //filteredResidences = apiService.Residences;
        initResidences = apiService.Residences;
    }

    private void GoToDetailsResidencePage(int id)
    {
        NavigationStateService.NavigateTo($"/residencedetails/{id.ToString()}");
    }

    private void OnSearchClicked()
    {
        filteredResidences = initResidences;

        if (filteredResidences != null)
        {
            if (searchModel.MunSearch != "")
            {
                filteredResidences = filteredResidences.Where(s => s.Municipality.Id == int.Parse(searchModel.MunSearch)).ToList();
            }
            else if (searchModel.CountySearch != "")
            {
                filteredResidences = filteredResidences.Where(s => s.Municipality.County.Id == int.Parse(searchModel.CountySearch)).ToList();
            }

            if (searchModel.StreetSearch != "")
            {
                filteredResidences = filteredResidences.Where(s => s.StreetName.Contains(searchModel.StreetSearch)).ToList();
            }
        }
    }
}